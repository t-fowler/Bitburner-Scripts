/** @param {NS} ns */

export function exploitsAvailable(ns) {
	let exploits = [];
	if (ns.fileExists("BruteSSH.exe")) {
		exploits.push("BruteSSH.exe");
	}
	if (ns.fileExists("FTPCrack.exe")) {
		exploits.push("FTPCrack.exe");
	}
	if (ns.fileExists("HTTPWorm.exe")) {
		exploits.push("HTTPWorm.exe");
	}
	if (ns.fileExists("SQLInject.exe")) {
		exploits.push("SQLInject.ext");
	}
	if (ns.fileExists("relaySMTP.exe")) {
		exploits.push("relaySMTP.exe");
	}
	return exploits;
}

export function exploitHost(ns, host) {
	let openPorts = 0;
	if (ns.getServerRequiredHackingLevel(host) > ns.getHackingLevel())
		return

	if (ns.fileExists("BruteSSH.exe")) {
			ns.brutessh(host);
			openPorts++;
	}
	if (ns.fileExists("FTPCrack.exe")) {
			ns.ftpcrack(host);
			openPorts++;
	}
	if (ns.fileExists("HTTPWorm.exe")) {
			ns.httpworm(host);
			openPorts++;
	}
	if (ns.fileExists("SQLInject.exe")) {
			ns.sqlinject(host);
			openPorts++;
	}
	if (ns.fileExists("relaySMTP.exe")) {
			ns.relaysmtp(host);
			openPorts++;
	}

	if (openPorts >= ns.getServerNumPortsRequired(host)) {
		ns.nuke(host);
	}
}

export async function exfiltrateData(ns, host) {
    for (let file of ns.ls(host)) {
        if (file.endsWith(".lit") || file.endsWith(".txt") || file.endsWith(".js") || file.endsWith(".script")) {
            await ns.scp(file, "n00dles", host);
        }
    }
}